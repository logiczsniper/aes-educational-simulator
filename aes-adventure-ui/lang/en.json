{
  "title": "Adventure",
  "infographic": "Download Infographic",
  "edit": "Edit",
  "seo": {
    "encrypt": "Encrypt",
    "decrypt": "Decrypt",
    "expand": "Expand Key",
    "encrypt-description": "Learn how AES encryption works with AES Adventure's step-by-step simulator. Supports all three key sizes and has tutorials to help guide your learning!",
    "decrypt-description": "Learn how AES decryption works with AES Adventure's step-by-step simulator. Supports all three key sizes and has tutorials to help guide your learning!",
    "expand-description": "Learn how AES key expansion works with AES Adventure's step-by-step simulator. Supports all three key sizes and has tutorials to help guide your learning!",
    "feedback": "Feedback",
    "feedback-description": "Give your valuable feedback to the creators of AES Adventure so we can improve the experience for everyone.",
    "guide": "Guide",
    "guide-description": "Learn how to get the most out of AES Adventure.",
    "home-description": "Welcome to AES Adventure, an intuitive AES educational tool. Input your own data and walk through step-by-step encryption, decryption, and key expansion of all three key sizes.",
    "settings": "Settings",
    "settings-description": "Change how AES Adventure looks to suit your needs."
  },
  "error": {
    "mistake": "Something went wrong...",
    "back": "Go back"
  },
  "home": {
    "description": "The Advanced Encryption Standard is the most popular symmetric-key cipher. If you want to learn the basics, dig deep into the details, or experiment with AES: you're in the right place!",
    "go": "Go to Simulator",
    "settings": {
      "title": "Settings",
      "badLang": "Is your language poorly translated or unavailable?"
    },
    "guide": {
      "title": "Guide",
      "table-of-contents": "Table of Contents",
      "intro": {
        "header": "Introduction",
        "body": "The Advanced Encryption Standard is a <i>symmetric block</i> cipher, meaning that it encrypts/decrypts fixed size blocks with only one key. AES Adventure breaks down AES into 3 primary processes: encryption, decryption, and key expansion. Key expansion is the derivation of subkeys from the input key - these subkeys are used by both encryption and decryption. Each of these complex aspects of AES has a simulator in AES Adventure that will walk you through how AES operates on your input. AES Adventure supports all 3 key sizes used by AES: 128, 192 and 256 bits. <b>Note:</b> all data in AES Adventure is represented in hexadecimal; 1 hexadecimal digit is 4 bits = 1 nibble = 0.5 bytes."
      },
      "features": {
        "header": "Features",
        "animations": {
          "header": "Animations",
          "body": "All of the simulators use animations to clearly show each step of the process. These animations support play, pause and seek operations. The playback speed of all animations can be doubled or halved using the rabbit and turtle icons respectively. Each step will have a button to move on to the next step - if you are learning the step, it is recommended that you do not move on until the button becomes highlighed (which generally occurs near the end of the animation)."
        },
        "tutorials": {
          "header": "Tutorials",
          "body": "All of the simulators have Tutorial icons scattered throughout. To get a textual explanation of what the icon is beside, click the tutorial icon to expand the simulator sidebar and reveal the corresponding tutorial. The sidebar will automatically return to the original size by clicking the same tutorial icon or moving on to the next step. Alternatively, the sidebar width can be manually adjusted using the dragging handle in the bottom right."
        },
        "configuration": {
          "header": "Configuration",
          "body": "The encryption and decryption simulators support a limited set of configurations that can be used by more advanced users to experiment with AES. These configurations can be found in the <i>Configure</i> modal to the left of this page. <b>Note:</b> changing the configuration will reset all simulators."
        },
        "persistence": {
          "header": "Local Persistence",
          "body": "The entire state of AES Adventure is saved to your browser's <i>localstorage</i> with keys that begin with <span class='code'>'AES_ADVENTURE_UI__'</span>. This means that if you close or leave AES Adventure, any simulations that are currently running will be completely restored when you return. If, for whatever reason, the application enters a broken state, it can be hard reset by deleting it's data in <i>localstorage</i> and refreshing the page."
        },
        "duplicate-buttons": {
          "header": "Copy Buttons",
          "body": "When an input area is full, you will see 1 or 2 <i>copy</i> icon buttons. The first button is a standard copy-to-clipboard button. The second one has a special ease-of-use function depending on which input it is beneath. Under the 'Ciphertext' output of encryption: copies the ciphertext over to the input of the decryption simulator. Under the 'Plaintext' output of decryption: copies the plaintext over to the input of the encryption simulator. Under any key input: copies the key into all other simulators - this is particularly useful to quickly use the same key for encryption, decryption and key expansion. <b>Note:</b> if the copy operation modifies input, the target simulator will be reset as inputs cannot be changed mid-simulation."
        },
        "i18n": {
          "header": "Internationalization",
          "body": "The language of the entire app can be changed in 'Settings'. These translations are expected to be imperfect; we did not hire professional translators to do this translation. Soon, there will be a way for you to request a fix/correction to the language files that store all of the translations."
        }
      },
      "quick-points": {
        "header": "Final Tips",
        "cant-input": "Input data cannot be changed if a simulator is currently using it. Hit the 'Reset' button to exit the current simulation and you will be able to modify the inputs once more.",
        "cant-start": "Simulators cannot be started until all required input areas are filled. All input areas will have a 'nibbles remaining' counter below them.",
        "nibble": "1 nibble is half a byte of course! (Also equivalent to 1 hexadecimal digit)",
        "small": "AES Adventure is designed to be viewed through screens that are atleast <b>13\"</b> in size. This is the smallest standard laptop size, which we expect all our users to be equipped with. If you find yourself with something smaller, utilize the browser's zoom capabilities and zoom out. If you are on mobile, rotate the device into landscape mode to get as much additional width as possible."
      }
    },
    "feedback": {
      "title": "Feedback",
      "body": "This is a developing project and we would love to get your feedback on the tool. There is a{googleFormLink}that you can fill out to give us some highly valuable information - your thoughts! Alternatively, the creators of AES Adventure are listed below, feel free to send us an email if you're having issues with the tool.",
      "button": "Google Form"
    },
    "gitlab": "GitLab"
  },
  "configure": {
    "button": "Configure",
    "modal": {
      "title": "Configure",
      "body": "Select a configuration below. If you are new to AES, we recommend that you use the default simulator before using this configuration. <b>Note:</b> changing the configuration will reset all simulators.",
      "defaults": {
        "standard": {
          "name": "Standard",
          "description": "Vanilla."
        },
        "short": {
          "name": "Short",
          "description": "Half the number of rounds."
        },
        "long": {
          "name": "Long",
          "description": "Double the number of rounds."
        },
        "staticColumns": {
          "name": "Static Columns",
          "description": "No MixColumns layers."
        },
        "staticRows": {
          "name": "Static Rows",
          "description": "No ShiftRows layers."
        },
        "staticBytes": {
          "name": "Static Bytes",
          "description": "No SubstituteBytes layers."
        }
      },
      "close": "Close"
    }
  },
  "simulator": {
    "hide": "Hide",
    "show": "Show",
    "quit": "Quit",
    "configurations": "Configurations",
    "configuration": "Configuration",
    "encrypt": "Encrypt",
    "decrypt": "Decrypt",
    "key-expansion": "Key Expansion",
    "plaintext": "Plaintext",
    "ciphertext": "Ciphertext",
    "key": "Key",
    "sbox": "Substitution Box",
    "constant-matrix": "Constant Matrix",
    "substitute-step": "Substitute",
    "shift-step": "Shift",
    "rcon": "Round Constant",
    "inverse": "Inverse",
    "state": "State",
    "input": "Input",
    "output": "Output",
    "add-key": "Add Key",
    "confusion": "Confusion",
    "diffusion": "Diffusion",
    "substitute-bytes": "Substitute Bytes",
    "shift-rows": "Shift Rows",
    "mix-columns": "Mix Columns",
    "add-round-key": "Add Round Key",
    "encryption": "encryption",
    "decryption": "decryption",
    "expansion": "expansion",
    "start": "Start",
    "finish": "Finish",
    "start-rounds": "Start rounds",
    "finish-rounds": "Finish rounds",
    "no-mix-columns-last": "Turned off because Mix Columns is skipped in the last round!",
    "no-mix-columns-first": "Turned off because Mix Columns is skipped in the first round!",
    "no-step-configuration": "Turned off because the selected configuration is",
    "no-h-function-key-size": "Turned off because the key size is not 256 bits!",
    "no-h-function-last": "Turned off because the <span class='math'>ℎ</span>-function is used to generate the 5th word but only 4 words are generated in the last round!",
    "round": "Round",
    "next-step": "Next step",
    "skip": "Skip to last round",
    "next-round": "Next round",
    "copy": "Copy",
    "reset": "Reset",
    "function": "function",
    "add-words": "Add Words",
    "keys-generated": "round keys ready",
    "round-keys": "Round Keys",
    "tutorial": {
      "title": "Tutorial",
      "default": {
        "description": "Click on {tutorialIcon} that you see to reveal relevant information here."
      },
      "sandbox": {
        "button": "Sandbox",
        "title": "Sandbox",
        "close": "Close"
      },
      "read-more": "Read More",
      "plaintext-to-state": {
        "body": "The first step is to create the state matrix that will be operated on throughout the encryption process. The plaintext is arranged into a 4x4 matrix of bytes and then this matrix is transposed.",
        "learn-more": {
          "matrices": "Matrix Transposition"
        }
      },
      "ciphertext-to-state": {
        "body": "The first step is to create the state matrix that will be operated on throughout the decryption process. The ciphertext is arranged into a 4x4 matrix of bytes and then this matrix is transposed.",
        "learn-more": {
          "matrices": "Matrix Transposition"
        }
      },
      "key-to-state": {
        "body": "The first step is to create the state vector that will be appended to throughout the key expansion process. The key is arranged into a vector of words, where 1 word is 4 bytes. <span class='highlight'>The AES key schedule changes slightly with each key size</span>, but it is always word-oriented."
      },
      "add-key": {
        "body": "The key is XORed with the state matrix. Note that the key is also arranged into a 4x4 matrix of bytes and transposed, just like the input. This is also referred to as <i>key whitening</i>."
      },
      "add-round-key": {
        "body": "The round key is XORed with the state matrix. Note that the round key is also arranged into a 4x4 matrix of bytes and transposed. Head over to the <i>Key Expansion</i> tab to learn how these round keys are created. During <b>encryption</b>, the round keys are used in the order they are created. During <b>decryption</b>, the round keys are used in the <b>opposite</b> order."
      },
      "add-words": {
        "body": "The first word is XORed with the last word, after the Round <span class='math'>𝑔</span>-function has been invoked on it. From there, each word is XORed with the previously computed word to create a new word which is then appended to the state vector. The <b>256-bit</b> key schedule invokes the Round <span class='math'>ℎ</span>-function on the 4th word generated in the round before continuing as normal.",
        "note": "The <span class='math'>𝑔</span>-function and <span class='math'>ℎ</span>-function computations are outlined in the following round steps."
      },
      "round-g-fn": {
        "body": "The <span class='math'>𝑔</span>-function consists of a series of operations on the bytes of the input word: Substitute Bytes, Shift Rows (shift = 1), and the first byte is XORed with the <i>round constant</i>. The bytes are then concatenated to form the output word.",
        "learn-more": {
          "rcon": "Computing AES's Round Constants"
        }
      },
      "round-h-fn": {
        "body": "The <span class='math'>ℎ</span>-function consists of a Substitute Bytes on the bytes of the input word. The bytes are then concatenated to form the output word."
      },
      "round-keys": {
        "body": "These subkeys are taken in the order shown during encryption. During <b>decryption</b>, they are used in the opposite order."
      },
      "rounds-header": {
        "body": "AES operates on the state matrix in rounds. 10 rounds for a key size of 128 bits, 12 rounds for 192 bits, and 14 rounds for 256 bits. Each round consists of the steps Substitute Bytes, Shift Rows, Mix Columns, Add Round Key; <span class='highlight'>except for the final round, which does not include Mix Columns</span>. During <b>decryption</b>, the steps are executed in the <b>opposite</b> order and Mix Columns is not included in the first round."
      },
      "key-rounds-header": {
        "body": "Each round of AES needs a subkey, plus 1 for key whitening. 11 subkeys for a key size of 128 bits, 13 subkeys for 192 bits, and 15 subkeys for 256 bits. Each round operates on the previous round's output to derive new words.",
        "aes-a": " AES Adventure breaks down each round into Add Words, Round <span class='math'>𝑔</span>-function and Round <span class='math'>ℎ</span>-function steps. Only the <b>256-bit</b> key schedule uses the Round <span class='math'>ℎ</span>-function step in each round, except for the final round.",
        "note": "Each round generates 1 subkey for a key size of 128 bits, 1.5 subkeys for 192 bits, and 2 subkeys for 256 bits, except the final round which generates 1 subkey for all three key sizes."
      },
      "rounds-stats": {
        "diffusion": "<b>Diffusion</b> is the influence of a single plaintext bit on the (current) ciphertext. The metric is represented in AES Adventure by the <i>avalanche</i> effect. This is calculated as follows: for each plaintext bit, flip it and compute the (current) ciphertext with the modified plaintext. Then, count the number of bits flipped in the (current) ciphertext: the metric is the average number of bits flipped across all plaintext variations.<br />Shift Rows and Mix Columns may be collectively referred to as the <i>diffusion layer</i> because they are the major diffusive steps in AES.",
        "confusion": "<b>Confusion</b> is the relationship between the (current) ciphertext and the key. The metric is represented in AES Adventure by a measure of association between the (current) ciphertext and key in which all 0s have been mapped to -1s.<br />Substitute Bytes introduces confusion in AES.",
        "learn-more": {
          "conf-diff": "Confusion & Diffusion",
          "avalanche": "Avalanche Effect"
        }
      },
      "sub-bytes": {
        "body": "Substitute Bytes replaces each state matrix byte with a byte from the substitution box, which provides non-linearity in AES (protection against analytical attacks). It is a bijective mapping; during <b>decryption</b>, we use the unique <b>inverse</b> of the substitution box.",
        "learn-more": {
          "bijective": "Bijective Functions",
          "sbox": "Computing AES's Substitution Box"
        }
      },
      "shift-rows": {
        "body": "Shift Rows performs a byte-wise cyclic shift on each row of the state matrix. During <b>decryption</b>, the shift is in the <b>opposite</b> direction. In both cases, the shift on the first row is 0, meaning the first row is never affected."
      },
      "mix-columns": {
        "body": "Mix Columns multiplies each column vector of the state matrix by a matrix of constants to produce the corresponding column of the resulting state matrix. The constant matrix is invertible; during <b>decryption</b>, we use the unique <b>inverse</b> of the constant matrix.",
        "learn-more": {
          "matrix-multiplication": "Matrix Multiplication",
          "matrix-inversion": "Matrix Inverses",
          "gf": "Galois Fields",
          "gf-arithmetic": "Arithmetics in <span class='math'>𝐺𝐹(2 ̂ 8)</span>"
        }
      },
      "state-to-ciphertext": {
        "body": "The final step is to create the ciphertext that is the output of the encryption process. The state matrix is transposed and then each entry is concatenated.",
        "learn-more": {
          "matrices": "Matrix Transposition"
        }
      },
      "state-to-plaintext": {
        "body": "The final step is to create the plaintext that is the output of the decryption process. The state matrix is transposed and then each entry is concatenated.",
        "learn-more": {
          "matrices": "Matrix Transposition"
        }
      },
      "state-to-round-keys": {
        "body": "The final step is to create the round keys that are the output of the key expansion process. The state vector words are taken 4 at a time and then each group is concatenated to form a subkey."
      }
    },
    "hexArea": {
      "nibblesLeft": "nibbles left.",
      "ready": "Ready!",
      "copied": "Copied to clipboard.",
      "duplicated-keys": "Copied to all key inputs.",
      "duplicated-plaintext": "Copied to encrypt input.",
      "duplicated-ciphertext": "Copied to decrypt input.",
      "go": "Go"
    }
  }
}